name: Geoglows Processing_dbhybroR

on:
  schedule:
    - cron: '0 10 * * *'  # Runs daily at 10 AM UTC (5 AM EST)
  workflow_dispatch:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository content
      uses: actions/checkout@v2

    - name: Cache pip packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache R packages
      uses: actions/cache@v4
      with:
        path: ~/R/site-library
        key: ${{ runner.os }}-R-${{ hashFiles('**/packages.R') }}
        restore-keys: |
          ${{ runner.os }}-R-

    - name: Install system dependencies for R and rpy2
      run: |
        sudo apt-get update
        sudo apt-get install -y r-base libcurl4-openssl-dev libssl-dev libxml2-dev ca-certificates libtirpc-dev

    - name: Create R library directory
      run: mkdir -p ~/R/site-library

    - name: Set R environment variable
      run: echo 'R_LIBS_USER="~/R/site-library"' >> ~/.Renviron

    - name: Install remotes package
      run: |
        R -e 'install.packages(c("remotes", "dplyr"), lib="~/R/site-library", repos="https://cloud.r-project.org/")'

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        pip install loone-data-prep==0.1.9
        pip install rpy2

    - name: Install dbhydroR from GitHub
      env:
        GITHUB_PAT: ${{ secrets.PAT }}
      run: |
        R -e 'remotes::install_github("YGC568/dbhydroR", lib="~/R/site-library", auth_token=Sys.getenv("GITHUB_PAT"))'

    - name: Set R environment variables
      run: |
        echo "R_HOME=$(R RHOME)" >> $GITHUB_ENV
        echo "R_LIBS_USER=~/R/site-library" >> $GITHUB_ENV

    - name: Disable SSL verification for R
      run: |
        echo 'options(download.file.method = "libcurl")' >> ~/.Rprofile
        echo 'httr::set_config(httr::config(ssl_verifypeer = FALSE))' >> ~/.Rprofile

    - name: Set R encoding to UTF-8
      run: |
        echo 'options(encoding = "UTF-8")' >> ~/.Rprofile
        echo 'Sys.setlocale("LC_ALL", "en_US.UTF-8")' >> ~/.Rprofile

    - name: Create necessary directories
      run: mkdir -p historical_data_download

    - name: Create month-year directory
      run: mkdir -p forecasted_boundary_$(date +'%m_%Y')

    - name: Monthly Geoglows data preparation
      if: ${{ (github.event_name == 'schedule') || (github.event_name == 'workflow_dispatch') }}
      env:
        R_HOME: ${{ env.R_HOME }}
        R_LIBS_USER: ${{ env.R_LIBS_USER }}
      run: |
        if [ "$(date +'%d')" -eq "01" ]; then
          python -m loone_data_prep.flow_data.get_inflows historical_data_download && \
          python -m loone_data_prep.flow_data.get_outflows historical_data_download && \
          python -m loone_data_prep.flow_data.S65E_total historical_data_download
        fi

    - name: Debug Environment Variables
      run: |
        echo "R_HOME=$R_HOME"
        echo "R_LIBS_USER=$R_LIBS_USER"
        echo "LD_LIBRARY_PATH=$LD_LIBRARY_PATH"
      env:
        R_HOME: ${{ env.R_HOME }}
        R_LIBS_USER: ${{ env.R_LIBS_USER }}
        LD_LIBRARY_PATH: /usr/lib/R/lib:/usr/lib/x86_64-linux-gnu

    - name: Run forecast flows script
      env:
        R_HOME: ${{ env.R_HOME }}
        R_LIBS_USER: ${{ env.R_LIBS_USER }}
        LD_LIBRARY_PATH: /usr/lib/R/lib:/usr/lib/x86_64-linux-gnu
      run: python get_forecast_flows.py forecasted_boundary_$(date +'%m_%Y') True forecasted_boundary_$(date +'%m_%Y')

      
    - name: Configure Git
      run: |
        git config --global user.name 'YGC568'
        git config --global user.email 'gopichandyenikapalli@usf.edu'

    - name: Stage all changes
      run: |
        git add forecasted_boundary_$(date +'%m_%Y')/*
        if [ "$(date +'%d')" -eq "01" ]; then git add historical_data_download/*; fi

    - name: Commit and push changes
      run: |
        if [ "$(date +'%d')" -eq "01" ]; then
          git commit -m "Monthly data processing at $(date +'%Y-%m-%d %H:%M:%S')"
        else
          git commit -m "Daily data processing at $(date +'%Y-%m-%d %H:%M:%S')"
        fi
        git push https://github.com/YGC568/Loone_forecast_boundary_GeoGlows HEAD:main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
